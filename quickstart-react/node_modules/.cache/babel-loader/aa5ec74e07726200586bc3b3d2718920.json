{"ast":null,"code":"var _jsxFileName = \"/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js\";\nimport React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport \"./Video.css\";\nimport AnnotationComments from '@contently/videojs-annotation-comments';\nvideojs.registerPlugin('annotationComments', AnnotationComments(videojs));\nconst annotationsObjects = [{\n  id: 1,\n  range: {\n    start: 10,\n    end: 15\n  },\n  shape: {\n    x1: 23.47,\n    y1: 9.88,\n    x2: 60.83,\n    y2: 44.2\n  },\n  comments: [{\n    id: 1,\n    meta: {\n      datetime: '2017-03-28T19:17:32.238Z',\n      user_id: 1,\n      user_name: 'Jack Pope'\n    },\n    body: 'The first comment!'\n  }]\n}];\nconst pluginOptions = {\n  // Collection of annotation data to initialize\n  annotationsObjects: annotationsObjects,\n  // Flexible meta data object (currently used for user data, but addl data can be provided to wrap each comment with metadata - provide the id of the current user and fullname of the current user at minimum, which are required for the UI)\n  meta: {\n    user_id: null,\n    user_name: null\n  },\n  // Use arrow keys to move through annotations when Annotation mode is active\n  bindArrowKeys: true,\n  // Show or hide the control panel and annotation toggle button (NOTE - if controls are hidden you must provide custom UI and events to drive the annotations - more on that in \"Programmatic Control\" below)\n  showControls: true,\n  // Show or hide the comment list when an annotation is active. If false, the text 'Click and drag to select', will follow the cursor during annotation mode\n  showCommentList: true,\n  // If false, annotations mode will be disabled in fullscreen\n  showFullScreen: true,\n  // Show or hide the tooltips with comment preview, and annotation shape, on marker hover or timeline activate\n  showMarkerShapeAndTooltips: true,\n  // If false, step two of adding annotations (writing and saving the comment) will be disabled\n  internalCommenting: true,\n  // If true, toggle the player to annotation mode immediately after init. (NOTE - \"annotationModeEnabled\" event is not fired for this initial state)\n  startInAnnotationMode: false\n};\n\nconst VideoJS2 = ({\n  src,\n  onReady\n}) => {\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    responsive: true,\n    fluid: false,\n    loop: true,\n    sources: [{\n      src: src // type: ‘video/mp4’\n\n    }]\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = playerRef.current = videojs(videoElement, videoJsOptions, () => {\n        console.log(\"readyyyy\");\n        onReady && onReady(player);\n      });\n      var plugin = player.annotationComments(pluginOptions);\n      plug;\n    } else {// you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions]); // Dispose the Video.js player when the functional component unmounts\n\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-vjs-player\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    className: \"video-js vjs-big-play-centered\",\n    controls: true,\n    width: \"640\",\n    height: \"268\",\n    preload: \"auto\",\n    \"data-setup\": \"{ \\\"playbackRates\\\": [0.5, 1, 1.5, 2, 4] }\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoJS2;","map":{"version":3,"sources":["/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js"],"names":["React","videojs","AnnotationComments","registerPlugin","annotationsObjects","id","range","start","end","shape","x1","y1","x2","y2","comments","meta","datetime","user_id","user_name","body","pluginOptions","bindArrowKeys","showControls","showCommentList","showFullScreen","showMarkerShapeAndTooltips","internalCommenting","startInAnnotationMode","VideoJS2","src","onReady","videoJsOptions","autoplay","controls","responsive","fluid","loop","sources","videoRef","useRef","playerRef","useEffect","current","videoElement","player","console","log","plugin","annotationComments","plug","dispose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport \"./Video.css\";\nimport AnnotationComments from '@contently/videojs-annotation-comments'\nvideojs.registerPlugin('annotationComments', AnnotationComments(videojs))\n\nconst annotationsObjects = [{\n    id: 1,\n    range: {\n        start: 10,\n        end: 15\n    },\n    shape: {\n        x1: 23.47,\n        y1: 9.88,\n        x2: 60.83,\n        y2: 44.2\n    },\n    comments: [{\n        id: 1,\n        meta: {\n            datetime: '2017-03-28T19:17:32.238Z',\n            user_id: 1,\n            user_name: 'Jack Pope'\n        },\n        body: 'The first comment!'\n    }]\n}];\n\nconst pluginOptions = {\n    // Collection of annotation data to initialize\n    annotationsObjects: annotationsObjects,\n    // Flexible meta data object (currently used for user data, but addl data can be provided to wrap each comment with metadata - provide the id of the current user and fullname of the current user at minimum, which are required for the UI)\n    meta: { user_id: null, user_name: null },\n    // Use arrow keys to move through annotations when Annotation mode is active\n    bindArrowKeys: true,\n    // Show or hide the control panel and annotation toggle button (NOTE - if controls are hidden you must provide custom UI and events to drive the annotations - more on that in \"Programmatic Control\" below)\n    showControls: true,\n    // Show or hide the comment list when an annotation is active. If false, the text 'Click and drag to select', will follow the cursor during annotation mode\n    showCommentList: true,\n    // If false, annotations mode will be disabled in fullscreen\n    showFullScreen: true,\n    // Show or hide the tooltips with comment preview, and annotation shape, on marker hover or timeline activate\n    showMarkerShapeAndTooltips: true,\n    // If false, step two of adding annotations (writing and saving the comment) will be disabled\n    internalCommenting: true,\n    // If true, toggle the player to annotation mode immediately after init. (NOTE - \"annotationModeEnabled\" event is not fired for this initial state)\n    startInAnnotationMode: false\n};\n\nconst VideoJS2 = ({ src, onReady }) => {\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    responsive: true,\n    fluid: false,\n    loop: true,\n    sources: [\n      {\n        src: src,\n        // type: ‘video/mp4’\n      },\n    ],\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = (playerRef.current = videojs(\n        videoElement,\n        videoJsOptions,\n        () => {\n          console.log(\"readyyyy\");\n          onReady && onReady(player);\n        }\n      ));\n      var plugin = player.annotationComments(pluginOptions)\nplug\n    } else {\n      // you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions]);\n  // Dispose the Video.js player when the functional component unmounts\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return (\n    <div data-vjs-player>\n      <video\n        ref={videoRef}\n        className=\"video-js vjs-big-play-centered\"\n        controls\n        width=\"640\"\n        height=\"268\"\n        preload=\"auto\"\n        data-setup='{ \"playbackRates\": [0.5, 1, 1.5, 2, 4] }'\n      />\n    </div>\n  );\n};\nexport default VideoJS2;\n"]},"metadata":{},"sourceType":"module"}