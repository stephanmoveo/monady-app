{"ast":null,"code":"var _jsxFileName = \"/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js\";\nimport React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nexport const VideoJS2 = ({\n  src,\n  onReady\n}) => {\n  const videoJsOptions = {\n    // lookup the options in the docs for more options\n    autoplay: true,\n    controls: true,\n    responsive: true,\n    fluid: true,\n    sources: [{\n      src: src // type: ‘video/mp4’\n\n    }]\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = playerRef.current = videojs(videoElement, videoJsOptions, () => {\n        console.log(\"readyyyy\");\n        onReady && onReady(player);\n      });\n    } else {// you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions]); // Dispose the Video.js player when the functional component unmounts\n\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-vjs-player\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    className: \"video-js vjs-big-play-centered\",\n    controls: true,\n    preload: \"auto\",\n    width: \"640\",\n    height: \"268\",\n    \"data-setup\": \"{ \\\"playbackRates\\\": [0.5, 1, 1.5, 2, 4] }\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}; // export default VideoJS2;","map":{"version":3,"sources":["/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js"],"names":["React","videojs","VideoJS2","src","onReady","videoJsOptions","autoplay","controls","responsive","fluid","sources","videoRef","useRef","playerRef","useEffect","current","videoElement","player","console","log","dispose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,4BAAP;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAE5C,QAAMC,cAAc,GAAG;AACrB;AACAC,IAAAA,QAAQ,EAAE,IAFW;AAGrBC,IAAAA,QAAQ,EAAE,IAHW;AAIrBC,IAAAA,UAAU,EAAE,IAJS;AAKrBC,IAAAA,KAAK,EAAE,IALc;AAMrBC,IAAAA,OAAO,EAAE,CACP;AACEP,MAAAA,GAAG,EAAEA,GADP,CAEE;;AAFF,KADO;AANY,GAAvB;AAaA,QAAMQ,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMC,SAAS,GAAGb,KAAK,CAACY,MAAN,CAAa,IAAb,CAAlB;AACAZ,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB;AACA,QAAI,CAACD,SAAS,CAACE,OAAf,EAAwB;AACtB,YAAMC,YAAY,GAAGL,QAAQ,CAACI,OAA9B;AACA,UAAI,CAACC,YAAL,EAAmB;AACnB,YAAMC,MAAM,GAAIJ,SAAS,CAACE,OAAV,GAAoBd,OAAO,CACzCe,YADyC,EAEzCX,cAFyC,EAGzC,MAAM;AACJa,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAf,QAAAA,OAAO,IAAIA,OAAO,CAACa,MAAD,CAAlB;AACD,OANwC,CAA3C;AAQD,KAXD,MAWO,CACL;AACA;AACA;AACA;AACD;AACF,GAnBD,EAmBG,CAACZ,cAAD,CAnBH,EAjB4C,CAqC5C;;AACAL,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACX,UAAID,SAAS,CAACE,OAAd,EAAuB;AACrBF,QAAAA,SAAS,CAACE,OAAV,CAAkBK,OAAlB;AACAP,QAAAA,SAAS,CAACE,OAAV,GAAoB,IAApB;AACD;AACF,KALD;AAMD,GAPD,EAOG,EAPH;AAQA,sBACE;AAAK,2BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEJ,QADP;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAC,MAJV;AAKE,IAAA,KAAK,EAAC,KALR;AAME,IAAA,MAAM,EAAC,KANT;AAOE,kBAAW,4CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CA3DM,C,CA4DP","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\n\n\nexport const VideoJS2 = ({ src, onReady }) => {\n    \n  const videoJsOptions = {\n    // lookup the options in the docs for more options\n    autoplay: true,\n    controls: true,\n    responsive: true,\n    fluid: true,\n    sources: [\n      {\n        src: src,\n        // type: ‘video/mp4’\n      },\n    ],\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = (playerRef.current = videojs(\n        videoElement,\n        videoJsOptions,\n        () => {\n          console.log(\"readyyyy\");\n          onReady && onReady(player);\n        }\n      ));\n    } else {\n      // you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions]);\n  // Dispose the Video.js player when the functional component unmounts\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return (\n    <div data-vjs-player>\n      <video\n        ref={videoRef}\n        className=\"video-js vjs-big-play-centered\"\n        controls\n        preload=\"auto\"\n        width=\"640\"\n        height=\"268\"\n        data-setup='{ \"playbackRates\": [0.5, 1, 1.5, 2, 4] }'\n      />\n    </div>\n  );\n};\n// export default VideoJS2;\n"]},"metadata":{},"sourceType":"module"}