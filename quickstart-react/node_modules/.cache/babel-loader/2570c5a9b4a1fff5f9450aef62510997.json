{"ast":null,"code":"var _jsxFileName = \"/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js\";\nimport React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport \"./Video.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport AnnotationComments from \"@contently/videojs-annotation-comments\";\nimport \"@contently/videojs-annotation-comments/build/css/annotations.css\";\nvideojs.registerPlugin(\"annotationComments\", AnnotationComments(videojs));\nconst monday = mondaySdk(); //monday.storage.instance.setItem('mykey', 'Lorem Ipsum').then(res => {console.log(res);})\n\nconst pluginOptions = {\n  // Collection of annotation data to initialize\n  annotationsObjects: [],\n  // Flexible meta data object (currently used for user data, but addl data can be provided to wrap each comment with metadata - provide the id of the current user and fullname of the current user at minimum, which are required for the UI)\n  meta: {\n    user_id: null,\n    user_name: null\n  },\n  // Use arrow keys to move through annotations when Annotation mode is active\n  bindArrowKeys: true,\n  // Show or hide the control panel and annotation toggle button (NOTE - if controls are hidden you must provide custom UI and events to drive the annotations - more on that in \"Programmatic Control\" below)\n  showControls: true,\n  // Show or hide the comment list when an annotation is active. If false, the text 'Click and drag to select', will follow the cursor during annotation mode\n  showCommentList: true,\n  // If false, annotations mode will be disabled in fullscreen\n  showFullScreen: true,\n  // Show or hide the tooltips with comment preview, and annotation shape, on marker hover or timeline activate\n  showMarkerShapeAndTooltips: true,\n  // If false, step two of adding annotations (writing and saving the comment) will be disabled\n  internalCommenting: true,\n  // If true, toggle the player to annotation mode immediately after init. (NOTE - \"annotationModeEnabled\" event is not fired for this initial state)\n  startInAnnotationMode: true\n};\n\nconst VideoJS2 = ({\n  src,\n  onReady,\n  index,\n  itemid\n}) => {\n  const [getCooments, setgCooments] = React.useState([]);\n  console.log(itemid.toString() + 'k' + index.toString());\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    responsive: true,\n    fluid: false,\n    loop: true,\n    sources: [{\n      src: src // type: ‘video/mp4’\n\n    }]\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = playerRef.current = videojs(videoElement, videoJsOptions, () => {\n        console.log(\"readyyyy\");\n        onReady && onReady(player);\n        var plugin = player.annotationComments(pluginOptions);\n        plugin.onReady(() => {});\n        plugin.registerListener(\"onStateChanged\", event => {\n          // event.detail = annotation state data\n          monday.storage.instance.setItem(itemid.toString() + 'k' + index.toString(), JSON.stringify(event.detail)).then(res => {\n            console.log(res);\n          });\n          monday.storage.instance.getItem(itemid.toString() + 'k' + index.toString()).then(res => {\n            console.log(res);\n          });\n        });\n      });\n    } else {// you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions]); // Dispose the Video.js player when the functional component unmounts\n\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-vjs-player\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    className: \"video-js vjs-big-play-centered\",\n    controls: true,\n    width: \"640\",\n    height: \"268\",\n    preload: \"auto\",\n    \"data-setup\": \"{ \\\"playbackRates\\\": [0.5, 1, 1.5, 2, 4] }\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoJS2;","map":{"version":3,"sources":["/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js"],"names":["React","videojs","mondaySdk","AnnotationComments","registerPlugin","monday","pluginOptions","annotationsObjects","meta","user_id","user_name","bindArrowKeys","showControls","showCommentList","showFullScreen","showMarkerShapeAndTooltips","internalCommenting","startInAnnotationMode","VideoJS2","src","onReady","index","itemid","getCooments","setgCooments","useState","console","log","toString","videoJsOptions","autoplay","controls","responsive","fluid","loop","sources","videoRef","useRef","playerRef","useEffect","current","videoElement","player","plugin","annotationComments","registerListener","event","storage","instance","setItem","JSON","stringify","detail","then","res","getItem","dispose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport \"./Video.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport AnnotationComments from \"@contently/videojs-annotation-comments\";\nimport \"@contently/videojs-annotation-comments/build/css/annotations.css\";\nvideojs.registerPlugin(\"annotationComments\", AnnotationComments(videojs));\nconst monday = mondaySdk();\n\n//monday.storage.instance.setItem('mykey', 'Lorem Ipsum').then(res => {console.log(res);})\n\nconst pluginOptions = {\n  // Collection of annotation data to initialize\n  annotationsObjects: [],\n  // Flexible meta data object (currently used for user data, but addl data can be provided to wrap each comment with metadata - provide the id of the current user and fullname of the current user at minimum, which are required for the UI)\n  meta: { user_id: null, user_name: null },\n  // Use arrow keys to move through annotations when Annotation mode is active\n  bindArrowKeys: true,\n  // Show or hide the control panel and annotation toggle button (NOTE - if controls are hidden you must provide custom UI and events to drive the annotations - more on that in \"Programmatic Control\" below)\n  showControls: true,\n  // Show or hide the comment list when an annotation is active. If false, the text 'Click and drag to select', will follow the cursor during annotation mode\n  showCommentList: true,\n  // If false, annotations mode will be disabled in fullscreen\n  showFullScreen: true,\n  // Show or hide the tooltips with comment preview, and annotation shape, on marker hover or timeline activate\n  showMarkerShapeAndTooltips: true,\n  // If false, step two of adding annotations (writing and saving the comment) will be disabled\n  internalCommenting: true,\n  // If true, toggle the player to annotation mode immediately after init. (NOTE - \"annotationModeEnabled\" event is not fired for this initial state)\n  startInAnnotationMode: true,\n};\n\nconst VideoJS2 = ({ src, onReady, index, itemid }) => {\nconst [getCooments, setgCooments] = React.useState([])\nconsole.log(itemid.toString()+'k'+index.toString());\n\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    responsive: true,\n    fluid: false,\n    loop: true,\n    sources: [\n      {\n        src: src,\n        // type: ‘video/mp4’\n      },\n    ],\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = (playerRef.current = videojs(\n        videoElement,\n        videoJsOptions,\n        () => {\n          console.log(\"readyyyy\");\n          onReady && onReady(player);\n          var plugin = player.annotationComments(pluginOptions);\n          plugin.onReady(() => {});\n          plugin.registerListener(\"onStateChanged\", (event) => {\n            // event.detail = annotation state data\n            monday.storage.instance\n              .setItem(itemid.toString()+'k'+index.toString() , JSON.stringify(event.detail))\n              .then((res) => {\n                console.log(res);\n              });\n             monday.storage.instance.getItem(itemid.toString()+'k'+index.toString()).then((res) => {\n              console.log(res);\n            });\n          });\n        }\n      ));\n    } else {\n      // you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions]);\n  // Dispose the Video.js player when the functional component unmounts\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return (\n    <div data-vjs-player>\n      <video\n        ref={videoRef}\n        className=\"video-js vjs-big-play-centered\"\n        controls\n        width=\"640\"\n        height=\"268\"\n        preload=\"auto\"\n        data-setup='{ \"playbackRates\": [0.5, 1, 1.5, 2, 4] }'\n      />\n    </div>\n  );\n};\nexport default VideoJS2;\n"]},"metadata":{},"sourceType":"module"}