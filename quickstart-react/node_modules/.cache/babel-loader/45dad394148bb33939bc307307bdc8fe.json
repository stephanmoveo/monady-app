{"ast":null,"code":"var _jsxFileName = \"/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js\";\nimport React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport \"./Video.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport AnnotationComments from \"@contently/videojs-annotation-comments\";\nimport \"@contently/videojs-annotation-comments/build/css/annotations.css\";\nvideojs.registerPlugin(\"annotationComments\", AnnotationComments(videojs));\nconst monday = mondaySdk();\n\nconst VideoJS2 = ({\n  src,\n  onReady,\n  index,\n  itemid\n}) => {\n  const [getComments, setGetComments] = React.useState([]);\n  let pluginOptions = {\n    annotationsObjects: [],\n    meta: {\n      user_id: null,\n      user_name: null\n    },\n    bindArrowKeys: true,\n    showControls: true,\n    showCommentList: true,\n    showFullScreen: true,\n    showMarkerShapeAndTooltips: true,\n    internalCommenting: true,\n    startInAnnotationMode: true\n  };\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    responsive: true,\n    fluid: false,\n    loop: true,\n    sources: [{\n      src: src // type: ‘video/mp4’\n\n    }]\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n    monday.storage.instance.getItem(itemid.toString() + \"k\" + index.toString()).then(res => {\n      // setGetComments(res.data.value);\n      pluginOptions = { ...pluginOptions,\n        annotationsObjects: JSON.parse(res.data.value)\n      }; //console.log(pluginOptions);\n    });\n\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = playerRef.current = videojs(videoElement, videoJsOptions, () => {\n        console.log(\"plugin running\");\n        onReady && onReady(player);\n        console.log(\"in player rerender\");\n        console.log(pluginOptions);\n        var plugin = player.annotationComments(pluginOptions);\n        plugin.onReady(() => {});\n        plugin.registerListener(\"onStateChanged\", event => {\n          // event.detail = annotation state data\n          monday.storage.instance.setItem(itemid.toString() + \"k\" + index.toString(), JSON.stringify(event.detail)).then(res => {\n            console.log(res);\n          }); // monday.storage.instance\n          //   .getItem(itemid.toString() + \"k\" + index.toString())\n          //   .then((res) => {\n          //     console.log(res);\n          //   });\n        });\n      });\n    } else {// you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions, pluginOptions]); // Dispose the Video.js player when the functional component unmounts\n\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-vjs-player\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    className: \"video-js vjs-big-play-centered\",\n    controls: true,\n    width: \"640\",\n    height: \"268\",\n    preload: \"auto\",\n    \"data-setup\": \"{ \\\"playbackRates\\\": [0.5, 1, 1.5, 2, 4] }\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default VideoJS2;","map":{"version":3,"sources":["/Users/stephanbenchemoul/Documents/Projects/Moveo Skills Projects/monady-app/quickstart-react/src/components/video-js/VideoJS2.js"],"names":["React","videojs","mondaySdk","AnnotationComments","registerPlugin","monday","VideoJS2","src","onReady","index","itemid","getComments","setGetComments","useState","pluginOptions","annotationsObjects","meta","user_id","user_name","bindArrowKeys","showControls","showCommentList","showFullScreen","showMarkerShapeAndTooltips","internalCommenting","startInAnnotationMode","videoJsOptions","autoplay","controls","responsive","fluid","loop","sources","videoRef","useRef","playerRef","useEffect","storage","instance","getItem","toString","then","res","JSON","parse","data","value","current","videoElement","player","console","log","plugin","annotationComments","registerListener","event","setItem","stringify","detail","dispose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,4BAAP;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,OAAO,kEAAP;AACAF,OAAO,CAACG,cAAR,CAAuB,oBAAvB,EAA6CD,kBAAkB,CAACF,OAAD,CAA/D;AACA,MAAMI,MAAM,GAAGH,SAAS,EAAxB;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AACpD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC;AAEA,MAAIC,aAAa,GAAG;AAClBC,IAAAA,kBAAkB,EAAE,EADF;AAElBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAFY;AAGlBC,IAAAA,aAAa,EAAE,IAHG;AAIlBC,IAAAA,YAAY,EAAE,IAJI;AAKlBC,IAAAA,eAAe,EAAE,IALC;AAMlBC,IAAAA,cAAc,EAAE,IANE;AAOlBC,IAAAA,0BAA0B,EAAE,IAPV;AAQlBC,IAAAA,kBAAkB,EAAE,IARF;AASlBC,IAAAA,qBAAqB,EAAE;AATL,GAApB;AAYA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,QAAQ,EAAE,KADW;AAErBC,IAAAA,QAAQ,EAAE,IAFW;AAGrBC,IAAAA,UAAU,EAAE,IAHS;AAIrBC,IAAAA,KAAK,EAAE,KAJc;AAKrBC,IAAAA,IAAI,EAAE,IALe;AAMrBC,IAAAA,OAAO,EAAE,CACP;AACEzB,MAAAA,GAAG,EAAEA,GADP,CAEE;;AAFF,KADO;AANY,GAAvB;AAaA,QAAM0B,QAAQ,GAAGjC,KAAK,CAACkC,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMC,SAAS,GAAGnC,KAAK,CAACkC,MAAN,CAAa,IAAb,CAAlB;AAEAlC,EAAAA,KAAK,CAACoC,SAAN,CAAgB,MAAM;AACpB;AAEA/B,IAAAA,MAAM,CAACgC,OAAP,CAAeC,QAAf,CACCC,OADD,CACS7B,MAAM,CAAC8B,QAAP,KAAoB,GAApB,GAA0B/B,KAAK,CAAC+B,QAAN,EADnC,EAECC,IAFD,CAEOC,GAAD,IAAS;AACb;AACA5B,MAAAA,aAAa,GAAG,EAAC,GAAGA,aAAJ;AAAmBC,QAAAA,kBAAkB,EAAC4B,IAAI,CAACC,KAAL,CAAWF,GAAG,CAACG,IAAJ,CAASC,KAApB;AAAtC,OAAhB,CAFa,CAGb;AACD,KAND;;AAQA,QAAI,CAACX,SAAS,CAACY,OAAf,EAAwB;AACtB,YAAMC,YAAY,GAAGf,QAAQ,CAACc,OAA9B;AACA,UAAI,CAACC,YAAL,EAAmB;AACnB,YAAMC,MAAM,GAAId,SAAS,CAACY,OAAV,GAAoB9C,OAAO,CACzC+C,YADyC,EAEzCtB,cAFyC,EAGzC,MAAM;AACJwB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA3C,QAAAA,OAAO,IAAIA,OAAO,CAACyC,MAAD,CAAlB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYrC,aAAZ;AACA,YAAIsC,MAAM,GAAGH,MAAM,CAACI,kBAAP,CAA0BvC,aAA1B,CAAb;AACAsC,QAAAA,MAAM,CAAC5C,OAAP,CAAe,MAAM,CAAE,CAAvB;AACA4C,QAAAA,MAAM,CAACE,gBAAP,CAAwB,gBAAxB,EAA2CC,KAAD,IAAW;AACnD;AACAlD,UAAAA,MAAM,CAACgC,OAAP,CAAeC,QAAf,CACGkB,OADH,CAEI9C,MAAM,CAAC8B,QAAP,KAAoB,GAApB,GAA0B/B,KAAK,CAAC+B,QAAN,EAF9B,EAGIG,IAAI,CAACc,SAAL,CAAeF,KAAK,CAACG,MAArB,CAHJ,EAKGjB,IALH,CAKSC,GAAD,IAAS;AACbQ,YAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACD,WAPH,EAFmD,CAUnD;AACA;AACA;AACA;AACA;AACD,SAfD;AAgBD,OA1BwC,CAA3C;AA4BD,KA/BD,MA+BO,CACL;AACA;AACA;AACA;AACD;AACF,GAhDD,EAgDG,CAAChB,cAAD,EAAiBZ,aAAjB,CAhDH,EA/BoD,CAgFpD;;AACAd,EAAAA,KAAK,CAACoC,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAM;AACX,UAAID,SAAS,CAACY,OAAd,EAAuB;AACrBZ,QAAAA,SAAS,CAACY,OAAV,CAAkBY,OAAlB;AACAxB,QAAAA,SAAS,CAACY,OAAV,GAAoB,IAApB;AACD;AACF,KALD;AAMD,GAPD,EAOG,EAPH;AAQA,sBACE;AAAK,2BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEd,QADP;AAEE,IAAA,SAAS,EAAC,gCAFZ;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAC,KAJR;AAKE,IAAA,MAAM,EAAC,KALT;AAME,IAAA,OAAO,EAAC,MANV;AAOE,kBAAW,4CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CAtGD;;AAuGA,eAAe3B,QAAf","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nimport \"./Video.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport AnnotationComments from \"@contently/videojs-annotation-comments\";\nimport \"@contently/videojs-annotation-comments/build/css/annotations.css\";\nvideojs.registerPlugin(\"annotationComments\", AnnotationComments(videojs));\nconst monday = mondaySdk();\n\nconst VideoJS2 = ({ src, onReady, index, itemid }) => {\n  const [getComments, setGetComments] = React.useState([]);\n\n  let pluginOptions = {\n    annotationsObjects: [],\n    meta: { user_id: null, user_name: null },\n    bindArrowKeys: true,\n    showControls: true,\n    showCommentList: true,\n    showFullScreen: true,\n    showMarkerShapeAndTooltips: true,\n    internalCommenting: true,\n    startInAnnotationMode: true,\n  };\n\n  const videoJsOptions = {\n    autoplay: false,\n    controls: true,\n    responsive: true,\n    fluid: false,\n    loop: true,\n    sources: [\n      {\n        src: src,\n        // type: ‘video/mp4’\n      },\n    ],\n  };\n  const videoRef = React.useRef(null);\n  const playerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    // make sure Video.js player is only initialized once\n\n    monday.storage.instance\n    .getItem(itemid.toString() + \"k\" + index.toString())\n    .then((res) => {\n      // setGetComments(res.data.value);\n      pluginOptions = {...pluginOptions, annotationsObjects:JSON.parse(res.data.value)}\n      //console.log(pluginOptions);\n    });\n\n    if (!playerRef.current) {\n      const videoElement = videoRef.current;\n      if (!videoElement) return;\n      const player = (playerRef.current = videojs(\n        videoElement,\n        videoJsOptions,\n        () => {\n          console.log(\"plugin running\");\n          onReady && onReady(player);\n          console.log(\"in player rerender\");\n          console.log(pluginOptions);\n          var plugin = player.annotationComments(pluginOptions);\n          plugin.onReady(() => {});\n          plugin.registerListener(\"onStateChanged\", (event) => {\n            // event.detail = annotation state data\n            monday.storage.instance\n              .setItem(\n                itemid.toString() + \"k\" + index.toString(),\n                JSON.stringify(event.detail)\n              )\n              .then((res) => {\n                console.log(res);\n              });\n            // monday.storage.instance\n            //   .getItem(itemid.toString() + \"k\" + index.toString())\n            //   .then((res) => {\n            //     console.log(res);\n            //   });\n          });\n        }\n      ));\n    } else {\n      // you can update player here [update player through props]\n      // const player = playerRef.current;\n      // player.autoplay(options.autoplay);\n      // player.src(options.sources);\n    }\n  }, [videoJsOptions, pluginOptions]);\n  // Dispose the Video.js player when the functional component unmounts\n  React.useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, []);\n  return (\n    <div data-vjs-player>\n      <video\n        ref={videoRef}\n        className=\"video-js vjs-big-play-centered\"\n        controls\n        width=\"640\"\n        height=\"268\"\n        preload=\"auto\"\n        data-setup='{ \"playbackRates\": [0.5, 1, 1.5, 2, 4] }'\n      />\n    </div>\n  );\n};\nexport default VideoJS2;\n"]},"metadata":{},"sourceType":"module"}